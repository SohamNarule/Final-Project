// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tourism.Context;

#nullable disable

namespace Tourism.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Tourism.Entities.BookingDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddharNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PassportNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PkgId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("updatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PkgId");

                    b.HasIndex("UserId");

                    b.ToTable("bookingDetails");
                });

            modelBuilder.Entity("Tourism.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("createdOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("updatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Tourism.Entities.MyPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("duration")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("longDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nameOfPackage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("price")
                        .HasColumnType("double");

                    b.Property<string>("smallDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tagline")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("updatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("packages");
                });

            modelBuilder.Entity("Tourism.Entities.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("createdOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("updatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("Tourism.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("createdOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("updatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Tourism.Entities.BookingDetails", b =>
                {
                    b.HasOne("Tourism.Entities.MyPackage", "myPackage")
                        .WithMany("bookingDetails")
                        .HasForeignKey("PkgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tourism.Entities.User", "user")
                        .WithMany("bookingDetails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("myPackage");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Tourism.Entities.MyPackage", b =>
                {
                    b.HasOne("Tourism.Entities.State", "state")
                        .WithMany("myPackages")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("state");
                });

            modelBuilder.Entity("Tourism.Entities.State", b =>
                {
                    b.HasOne("Tourism.Entities.Country", "Country")
                        .WithMany("states")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Tourism.Entities.Country", b =>
                {
                    b.Navigation("states");
                });

            modelBuilder.Entity("Tourism.Entities.MyPackage", b =>
                {
                    b.Navigation("bookingDetails");
                });

            modelBuilder.Entity("Tourism.Entities.State", b =>
                {
                    b.Navigation("myPackages");
                });

            modelBuilder.Entity("Tourism.Entities.User", b =>
                {
                    b.Navigation("bookingDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
